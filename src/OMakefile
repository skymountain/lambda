.PHONY: all install clean

# This project requires ocamlfind (default - false).
USE_OCAMLFIND = true
OCAMLPACKS[] =
	str

if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

# OCAMLINCLUDES +=

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = $(not $(OCAMLOPT_EXISTS))

#
# Various options
#
# OCAMLFLAGS    +=
OCAMLCFLAGS   += -annot
OCAMLOPTFLAGS += -annot
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

OCamlGeneratedFiles(parser.ml lexer.ml)

FILES[] =
	misc
	optionMonad
	env
	syntax
	typvarMap
	value
	type
	parser
	lexer
	patmatch
	typing
	eval
	main

PROGRAM = lambda
# OCAML_LIBS +=
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS +=
# OCAML_LIB_FLAGS +=
.DEFAULT: $(OCamlProgram $(PROGRAM), $(FILES))

clean:
	rm *.o *.cmi *.cmx *.annot *.spot *.spit *.omc lambda lambda.opt